<?php
function multiform_menu() {
  $items['multiform'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'Multi Form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('multiform_primary_form'),
    'access callback' => TRUE,
  );
  return $items;
}

function multiform_primary_form($form, &$form_state) {
  // Check to see if anything has been stored.
  if ($form_state['rebuild']) {
    $form_state['input'] = array();
  }
  if (empty($form_state['storage'])) {
    // No step has been set so start with the first.
    $form_state['storage'] = array(
      'step' => 'multiform_first_form',
    );
  }
  // Return the current form
  $function = $form_state['storage']['step'];
  $form = $function($form, $form_state);
  return $form;
}

function multiform_primary_form_submit($form, &$form_state) {
  $values = $form_state['values'];
  if (isset($values['back']) && $values['op'] == $values['back']) {
    // Moving back in form.
    $step = $form_state['storage']['step'];
    // Call current step submit handler if it exists to unset step form data.
    if (function_exists($step . '_submit')) {
      $function = $step . '_submit';
      $function($form, $form_state);
    }
    // Remove the last saved step so we use it next.
    $last_step = array_pop($form_state['storage']['steps']);
    $form_state['storage']['step'] = $last_step;
  }
  else {
    // Record step.
    $step = $form_state['storage']['step'];
    $form_state['storage']['steps'][] = $step;
    // Call step submit handler if it exists.
    if (function_exists($step . '_submit')) {
      $function = $step . '_submit';
      $function($form, $form_state);
    }
  }
  return;
}

function multiform_first_form($form, $form_state) {
  if(!empty($form_state['storage']))
    $values = $form_state['storage'];
  $form['user_info']['username'] = array(
    '#type' => 'textfield',
    '#title' => t('User Name'),
    '#size' => 15,
    '#maxlength' => 15,
    '#default_value' => isset($values['username']) ? $values['username'] : NULL,
    '#description' => t('The user name that will appear to other users. You should not use your real name.'),
    '#required' => TRUE,
  );
  $form['user_info']['first_name'] = array(
    '#type' => 'textfield',
    '#title' => t('First Name'),
    '#size' => 32,
    '#default_value' => isset($values['first_name']) ? $values['first_name'] : NULL,
    '#required' => TRUE,
  );
  $form['user_info']['last_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Last Name'),
    '#size' => 32,
    '#default_value' => isset($values['last_name']) ? $values['last_name'] : NULL,
    '#required' => TRUE,
  );
  $form['user_info']['email'] = array(
    '#type' => 'textfield',
    '#title' => t('E-mail Address'),
    '#size' => 32,
    '#default_value' => isset($values['email']) ? $values['email'] : NULL,
    '#required' => TRUE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Next'),
  );
  return $form;
}

function multiform_first_form_submit($form, &$form_state) {
  $values = $form_state['values'];

  // Save values to the form storage, add the next step function callback
  $form_state['rebuild'] = TRUE;  // This is very important to have!
  $form_state['storage']['username'] = check_plain($form_state['values']['username']);
  $form_state['storage']['first_name'] = htmlspecialchars($form_state['values']['first_name']);
  $form_state['storage']['last_name'] = htmlspecialchars($form_state['values']['last_name']);
  $form_state['storage']['email'] = check_plain($form_state['values']['email']);
  $form_state['storage']['step'] = 'multiform_second_form';
}

function multiform_second_form($form, &$form_state) {
  // Make sure the default values for the checkboxes are set correctly.
  if (!empty($form_state['storage'])) {
    $values = $form_state['storage'];
    if (!empty($form_state['storage']['food'])) {
      foreach ($form_state['storage']['food'] as $value) {
        if (!empty($value)) {
          $default_values[] = $value;
        }
      }
      if(empty($default_values)) {
        // Storage and experience are set, but no values were selected.
        $default_values = array();
      }
    }
    else {
      // Storage was set, but experience wasn't.
      $default_values = array();
    }
  }
  else {
    // Storage is not set.
    $default_values = array();
  }

  // Set options
  $checkboxes = array(
    1 => 'Pizza',
    2 => 'Hot Wings',
    3 => 'Subs',
    4 => 'Salads',
    5 => 'Garlic Bread',
    6 => 'Pasta',
    7 => 'Cake',
    8 => 'Ice Cream',
  );

  $form['additional'] = array(
    '#type' => 'fieldset',
    '#title' => t('Additional Information'),
    '#collapsible' => FALSE,
  );
  $form['additional']['food'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Food you like'),
    '#options' => $checkboxes,
    '#default_value' => $default_values,
  );
  $form['additional']['company'] = array(
    '#type' => 'textfield',
    '#title' => t('Company'),
    '#size' => 32,
    '#default_value' => isset($values['company']) ? $values['company'] : NULL,
    '#required' => TRUE,
  );
  $form['additional']['message'] = array(
    '#type' => 'textarea',
    '#title' => t('Additional Information'),
    '#description' => t('Please provide information about your job'),
    '#size' => 32,
    '#default_value' => isset($values['message']) ? $values['message'] : NULL,
  );
  $form['back'] = array(
    '#type' => 'submit',
    '#value' => t('Back'),
    '#limit_validation_errors' => array(),
    '#submit' => array('multiform_second_form_submit'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Next'),
  );
  return $form;
}

function multiform_second_form_submit($form, &$form_state) {
  $values = $form_state['values'];
  $form_state['rebuild'] = TRUE;
  if (isset($values['back']) && $values['op'] == $values['back']) {
    $input = $form_state['input'];
    // The user clicked the back button, save values that were input
    if (isset($input['food'])) {
      $form_state['storage']['food'] = $input['food'];
    }
    if (isset($input['company'])) {
      $form_state['storage']['company'] = htmlspecialchars($input['company']);
    }
    if (isset($input['message'])) {
      $form_state['storage']['message'] = htmlspecialchars($input['message']);
    }
    $form_state['storage']['step'] = 'multiform_first_form';
  }
  else {
    $form_state['storage']['food'] = $values['food'];
    $form_state['storage']['company'] = htmlspecialchars($values['company']);
    $form_state['storage']['message'] = htmlspecialchars($values['message']);
    $form_state['storage']['step'] = 'multiform_third_form';
  }
}
